/*题目：请实现一个函数按照之字形打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打印，
第三行按照从左到右的顺序打印，其他行以此类推。*/
//思路：参考二叉树层级遍历，队列实现，添加变量记录层数，根据当前层数add()或add(0,Integer)即可
//参考思路：参考二叉树层级遍历，递归实现，根据当前高度add即可
import java.util.*;
/*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    //参考二叉树层级遍历
    public ArrayList<ArrayList<Integer> > Print(TreeNode root) {
        ArrayList<ArrayList<Integer>> res=new ArrayList<ArrayList<Integer>>();
        help(root,res,0);
        return res;
    }
    public void help(TreeNode root,ArrayList<ArrayList<Integer>> res,int height){
        if(root==null) return;
        if(res.size()<=height)
            res.add(new ArrayList<Integer>());
        if(height%2==0)
            res.get(height).add(root.val);
        else res.get(height).add(0,root.val);
        help(root.left,res,height+1);
        help(root.right,res,height+1);
    }
}
